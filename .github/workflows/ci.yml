name: CI

on:
  workflow_dispatch:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev]

jobs:
  verify-code-style:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install dotnet-format
      run: dotnet tool update -g dotnet-format

    - name: Lint
      run: dotnet format ./source/CecoChat.sln --no-restore --verify-no-changes --verbosity detailed

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Generate certificate
      working-directory: source/certificates
      run: |
        openssl version
        bash create-certificate.sh

    - name: Restore
      run: |
        dotnet restore source/CecoChat.sln
        dotnet restore source/Check.sln

    - name: Build
      run: |
        dotnet build --no-restore source/CecoChat.sln
        dotnet build --no-restore source/Check.sln

    - name: Upload pfx needed for code analysis
      uses: actions/upload-artifact@v3
      with:
        name: services-pfx
        path: source/certificates/services.pfx

  analyze-code-quality:
    needs: [verify-code-style, build]
    runs-on: windows-latest
    steps:

      - name: JDK 11 setup
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: 17

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Download pfx needed for code analysis
        uses: actions/download-artifact@v3
        with:
          name: services-pfx
          path: source/certificates

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"cvetomir-todorov_CecoChat" /o:"cvetomirtodorov-cecochat" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build source/CecoChat.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
