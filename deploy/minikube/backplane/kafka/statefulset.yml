apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: backplane-kafka
  namespace: cecochat
  labels:
    app: backplane-kafka
spec:
  selector:
    matchLabels:
      app: backplane-kafka
  serviceName: backplane-kafka
  replicas: 2
  podManagementPolicy: Parallel
  template:
    metadata:
      name: backplane-kafka
      namespace: cecochat
      labels:
        app: backplane-kafka
    spec:
      containers:
        - name: backplane-kafka
          image: confluentinc/cp-kafka:7.2.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: backplane-zk-0.backplane-zk.cecochat.svc.cluster.local,backplane-zk-1.backplane-zk.cecochat.svc.cluster.local
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://$(POD_IP):9092
            - name: KAFKA_LOG4J_ROOT_LOGLEVEL
              value: WARN
            - name: KAFKA_TOOLS_LOG4J_LOGLEVEL
              value: ERROR
            - name: KAFKA_HEAP_OPTS
              value: "-Xms256M -Xmx256M"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: config
              mountPath: /bin/entrypoint.sh
              subPath: entrypoint.sh
              readOnly: true
            - name: backplane-kafka
              mountPath: /var/lib/kafka/data
          command:
            - /bin/entrypoint.sh
      volumes:
        - name: config
          configMap:
            name: backplane-kafka
            defaultMode: 0777
  volumeClaimTemplates:
    - metadata:
        name: backplane-kafka
        namespace: cecochat
        labels:
          app: backplane-kafka
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 512Mi
