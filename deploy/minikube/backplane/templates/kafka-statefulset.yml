apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name}}-kafka
  namespace: {{.Release.Namespace}}
  labels:
    app: {{.Release.Name}}-kafka
spec:
  selector:
    matchLabels:
      app: {{.Release.Name}}-kafka
  serviceName: {{.Release.Name}}-kafka
  replicas: {{.Values.Kafka.StatefulSet.Replicas}}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-kafka
    spec:
      containers:
        - name: {{.Release.Name}}-kafka
          image: {{.Values.Kafka.Image.Name}}:{{.Values.Kafka.Image.Tag}}
          imagePullPolicy: {{.Values.Kafka.Image.PullPolicy}}
          ports:
            - containerPort: {{.Values.Kafka.Networking.Port}}
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{.Release.Name}}-zk-0.{{.Release.Name}}-zk.{{.Release.Namespace}}.svc.cluster.local,{{.Release.Name}}-zk-1.{{.Release.Name}}-zk.{{.Release.Namespace}}.svc.cluster.local
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(POD_IP):{{.Values.Kafka.Networking.Port}}"
            - name: KAFKA_LOG4J_ROOT_LOGLEVEL
              value: WARN
            - name: KAFKA_TOOLS_LOG4J_LOGLEVEL
              value: ERROR
            - name: KAFKA_HEAP_OPTS
              value: "-Xms256M -Xmx256M"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: config
              mountPath: {{.Values.Kafka.Entrypoint.MountPath}}
              subPath: {{.Values.Kafka.Entrypoint.ConfigName}}
              readOnly: true
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          command:
            - {{.Values.Kafka.Entrypoint.MountPath}}
      volumes:
        - name: config
          configMap:
            name: {{.Release.Name}}-kafka
            defaultMode: 0777
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: {{.Values.Kafka.Resources.Requests.Storage}}
